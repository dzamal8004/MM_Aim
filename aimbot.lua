-- AIM Script for Madder Mystery by Beta01 (Delta Calculations)
-- –°–∏–º–º—É–ª—è—Ü–∏—è C-1 | –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: Null

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
local AimKey = Enum.UserInputType.MouseButton2
local FOV = 90 -- –ü–æ–ª–µ –∑–∞—Ö–≤–∞—Ç–∞ —Ü–µ–ª–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
local Smoothness = 0.15 -- –ü–ª–∞–≤–Ω–æ—Å—Ç—å –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è (0-1)
local TeamCheck = true -- –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ—é–∑–Ω–∏–∫–æ–≤
local VisibilityCheck = true -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Å—Ç–µ–Ω—ã

-- –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–µ–ª—å—Ç—ã –∏ –ø–æ–∏—Å–∫–∞ —Ü–µ–ª–∏
function FindTarget()
    local closestTarget = nil
    local shortestDelta = FOV

    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        if not player.Character then continue end
        
        local humanoid = player.Character:FindFirstChild("Humanoid")
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        
        if not humanoid or not rootPart or humanoid.Health <= 0 then continue end
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã
        if TeamCheck and player.Team == LocalPlayer.Team then continue end
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        if VisibilityCheck then
            local origin = Camera.CFrame.Position
            local direction = (rootPart.Position - origin).Unit * 1000
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, Camera}
            local result = workspace:Raycast(origin, direction, raycastParams)
            
            if result and result.Instance:FindFirstAncestor(player.Name) == nil then
                continue
            end
        end

        -- –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–µ–ª—å—Ç—ã –ø–æ–∑–∏—Ü–∏–∏
        local screenPosition, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
        if onScreen then
            local delta = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude
            
            if delta < shortestDelta then
                shortestDelta = delta
                closestTarget = rootPart
            end
        end
    end
    
    return closestTarget
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
local function AimAtTarget(target)
    if not target then return end
    
    local currentCamera = Camera
    local targetPosition = target.Position
    
    -- –ü–ª–∞–≤–Ω–æ–µ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–µ–ª—å—Ç–∞-–∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏
    local startPosition = currentCamera.CFrame
    local endPosition = CFrame.new(currentCamera.CFrame.Position, targetPosition)
    
    local step = 0
    while step < 1 and target and target.Parent do
        step = step + (1 - Smoothness) * 0.1
        Camera.CFrame = startPosition:Lerp(endPosition, step)
        RunService.RenderStepped:Wait()
    end
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.UserInputType == AimKey then
        local target = FindTarget()
        if target then
            AimAtTarget(target)
        end
    end
end)

print("‚úÖ Delta-AIM –¥–ª—è Madder Mystery –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
print("üéØ –ö–ª–∞–≤–∏—à–∞ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è: –ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏")
print("üìä FOV: " .. FOV .. "px | Smoothness: " Smoothness)
